// cc2llvm.ast
// extension of cc.ast: additional entry points for cc2llvm

verbatim {
  #define LLVM_EXTENSION        // this extension module is active
  #include <vector>
  class CC2LLVMEnv;             // cc2llvm.h
  namespace llvm {
    class Value;
    class Type;
  };
}

class TopForm {
  public void cc2llvm(CC2LLVMEnv &env) const;
}

class Function {
  public void cc2llvm(CC2LLVMEnv &env) const;
}

class Declaration {
  public void cc2llvm(CC2LLVMEnv &env) const;
}

class Statement {
  pure_virtual void cc2llvm(CC2LLVMEnv &env) const;
}

class Expression {
  pure_virtual llvm::Value *cc2llvm(CC2LLVMEnv &env, int& deref) const;
}

class FullExpression {
  public llvm::Value *cc2llvm(CC2LLVMEnv &env, int& deref) const;
}

class Asm() {
    public sm::string constraintString; // The constraint string in LLVM style.
}

// EOF
