// The stand-alone preprocessor configuration file.

// Language tokens (Token IDENTIFIER must be defined if keywords or macros are used).
tokens {
    '*', '&', '-', '!', '~', '(', ')', '?', ':', ',',
    '/', '%', '<<', '>>', '<', '>', '<=', '>=', '==', '!=',
    '^', '|', '&&', '||', '+', '...',
    ';', '[', ']', '{', '}', '=', '*=', '/=', '%=', '+=', '++', '-=', '--',
    '->', '&=', '^=', '|=', '.', '<<=', '>>=',
    IDENTIFIER = "[a-zA-Z_][a-zA-Z_0-9]*",
    INTEGER = "[1-9][0-9]*([uU]|[lL])*",                // Decimal integer
    INTEGER = "0[xX][0-9a-fA-F]+([uU]|[lL])*",          // Hexadecimal integer
    INTEGER = "0[0-7]*([uU]|[lL])*",                    // Octal integer
    FLOAT = "[0-9]+\\.[0-9]*([eE][-+]?[0-9]+)?",        // <digits>.
    FLOAT = "[0-9]*\\.[0-9]+([eE][-+]?[0-9]+)?",        // .<digits>
    FLOAT = "[0-9]+[eE][-+]?[0-9]+",                    // <digits>e
    STRING = "L?\"(\\\\.|[^\"\n])*\"",
    CHARACTER = "L?'(\\\\.|[^'\n])*'",
};

// Language comments (start string .. end string).
comment { "//" .. "\n" };                               // Single line comment.
comment { "/*" .. "*/" };                               // Multi line comment.

// Additional include paths.
includes {
    "/usr/include",
};
