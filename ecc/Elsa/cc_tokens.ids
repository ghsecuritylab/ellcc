// cc_tokens.ids
// There is a pathological connection between this and ../Basic/TokenKinds.def.
// Until this is fixed anything added there has to be added here. Be careful
// to maintain the same order.

// form:
//   <code> : <name> [<alias>] ;

    0 : TOK_EOF                        "<EOF>";
    1 : TOK_UNKNOWN                    "<UNKNOWN>";
    2 : TOK_EOM                        "<EOF>";
    3 : TOK_COMMENT                    "<COMMENT>";
    4 : TOK_NAME                       ;
    5 : TOK_FLOAT_LITERAL              ;
    6 : TOK_INT_LITERAL                ;
    7 : TOK_CHAR_LITERAL               ;
    8 : TOK_STRING_LITERAL             ;
    9 : TOK_WIDE_STRING_LITERAL        ;
   10 : TOK_ANGLE_STRING_LITERAL       ;
   11 : TOK_LBRACKET                   "[";
   12 : TOK_RBRACKET                   "]";
   13 : TOK_LPAREN                     "(";
   14 : TOK_RPAREN                     ")";
   15 : TOK_LBRACE                     "{";
   16 : TOK_RBRACE                     "}";
   17 : TOK_DOT                        ".";
   18 : TOK_ELLIPSIS                   "...";
   19 : TOK_AND                        "&";
   20 : TOK_ANDAND                     "&&";
   21 : TOK_ANDEQUAL                   "&=";
   22 : TOK_STAR                       "*";
   23 : TOK_STAREQUAL                  "*=";
   24 : TOK_PLUS                       "+";
   25 : TOK_PLUSPLUS                   "++";
   26 : TOK_PLUSEQUAL                  "+=";
   27 : TOK_MINUS                      "-";
   28 : TOK_ARROW                      "->";
   29 : TOK_MINUSMINUS                 "--";
   30 : TOK_MINUSEQUAL                 "-=";
   31 : TOK_TILDE                      "~";
   32 : TOK_BANG                       "!";
   33 : TOK_NOTEQUAL                   "!=";
   34 : TOK_SLASH                      "/";
   35 : TOK_SLASHEQUAL                 "/=";
   36 : TOK_PERCENT                    "%";
   37 : TOK_PERCENTEQUAL               "%=";
   38 : TOK_LESSTHAN                   "<";
   39 : TOK_LEFTSHIFT                  "<<";
   40 : TOK_LESSEQ                     "<=";
   41 : TOK_LEFTSHIFTEQUAL             "<<=";
   42 : TOK_GREATERTHAN                ">";
   43 : TOK_RIGHTSHIFT                 ">>";
   44 : TOK_GREATEREQ                  ">=";
   45 : TOK_RIGHTSHIFTEQUAL            ">>=";
   46 : TOK_XOR                        "^";
   47 : TOK_XOREQUAL                   "^=";
   48 : TOK_OR                         "|";
   49 : TOK_OROR                       "||";
   50 : TOK_OREQUAL                    "|=";
   51 : TOK_QUESTION                   "?";
   52 : TOK_COLON                      ":";
   53 : TOK_SEMICOLON                  ";";
   54 : TOK_EQUAL                      "=";
   55 : TOK_EQUALEQUAL                 "==";
   56 : TOK_COMMA                      ",";
   57 : TOK_HASH                       "#";
   58 : TOK_HASH_HASH                  "##";
   59 : TOK_HASH_HAT                   "#@";
   60 : TOK_DOTSTAR                    ".*";
   61 : TOK_ARROWSTAR                  "->*";
   62 : TOK_COLONCOLON                 "::";
   63 : TOK_AT                         "@";
   64 : TOK_MIN_OP                     "<?";
   65 : TOK_MAX_OP                     ">?";

   66 : TOK_AUTO                       "auto";
   67 : TOK_BREAK                      "break";
   68 : TOK_CASE                       "case";
   69 : TOK_CHAR                       "char";
   70 : TOK_CONST                      "const";
   71 : TOK_CONTINUE                   "continue";
   72 : TOK_DEFAULT                    "default";
   73 : TOK_DO                         "do";
   74 : TOK_DOUBLE                     "double";
   75 : TOK_ELSE                       "else";
   76 : TOK_ENUM                       "enum";
   77 : TOK_EXTERN                     "extern";
   78 : TOK_FLOAT                      "float";
   79 : TOK_FOR                        "for";
   80 : TOK_GOTO                       "goto";
   81 : TOK_IF                         "if";
   82 : TOK_INLINE                     "inline";
   83 : TOK_INT                        "int";
   84 : TOK_LONG                       "long";
   85 : TOK_REGISTER                   "register";
   86 : TOK_RESTRICT                   "restrict";
   87 : TOK_RETURN                     "return";
   88 : TOK_SHORT                      "short";
   89 : TOK_SIGNED                     "signed";
   90 : TOK_SIZEOF                     "sizeof";
   91 : TOK_STATIC                     "static";
   92 : TOK_STRUCT                     "struct";
   93 : TOK_SWITCH                     "switch";
   94 : TOK_TYPEDEF                    "typedef";
   95 : TOK_UNION                      "union";
   96 : TOK_UNSIGNED                   "unsigned";
   97 : TOK_VOID                       "void";
   98 : TOK_VOLATILE                   "volatile";
   99 : TOK_WHILE                      "while";
  100 : TOK__BOOL                      "_Bool";
  101 : TOK__COMPLEX                   "_Complex";
  102 : TOK__IMAGINARY                 "_Imaginary";
  103 : TOK_ASM                        "asm";
  104 : TOK_BOOL                       "bool";
  105 : TOK_CATCH                      "catch";
  106 : TOK_CLASS                      "class";
  107 : TOK_CONST_CAST                 "const_cast";
  108 : TOK_DELETE                     "delete";
  109 : TOK_DYNAMIC_CAST               "dynamic_cast";
  110 : TOK_EXPLICIT                   "explicit";
  111 : TOK_EXPORT                     "export";
  112 : TOK_FALSE                      "false";
  113 : TOK_FRIEND                     "friend";
  114 : TOK_MUTABLE                    "mutable";
  115 : TOK_NAMESPACE                  "namespace";
  116 : TOK_NEW                        "new";
  117 : TOK_OPERATOR                   "operator";
  118 : TOK_PRIVATE                    "private";
  119 : TOK_PROTECTED                  "protected";
  120 : TOK_PUBLIC                     "public";
  121 : TOK_REINTERPRET_CAST           "reinterpret_cast";
  122 : TOK_STATIC_CAST                "static_cast";
  123 : TOK_TEMPLATE                   "template";
  124 : TOK_THIS                       "this";
  125 : TOK_THROW                      "throw";
  126 : TOK_TRUE                       "true";
  127 : TOK_TRY                        "try";
  128 : TOK_TYPENAME                   "typename";
  129 : TOK_TYPEID                     "typeid";
  130 : TOK_USING                      "using";
  131 : TOK_VIRTUAL                    "virtual";
  132 : TOK_WCHAR_T                    "wchar_t";

  // C++0x
  133 : TOK_ALIGNOF                     "alignof";
  134 : TOK_AXIOM                       "axiom";
  135 : TOK_CHAR16_T                    "char16_t";
  136 : TOK_CHAR32_T                    "char32_t";
  137 : TOK_CONCEPT                     "concept";
  138 : TOK_CONCEPT_MAP                 "concept_map";
  139 : TOK_CONSTEXPR                   "constexpr";
  140 : TOK_DECLTYPE                    "decltype";
  141 : TOK_LATE_CHECK                  "late_check";
  142 : TOK_NULLPTR                     "nullptr";
  143 : TOK_REQUIRES                    "requires";
  144 : TOK_STATIC_ASSERT               "static_assert";
  145 : TOK_THREAD_LOCAL                "thread_local";

  146 : TOK__DECIMAL32                  "_Decimal32";
  147 : TOK__DECIMAL64                  "_Decimal64";
  148 : TOK__DECIMAL128                 "_Decimal128";
  149 : TOK__NULL                       "__null";
  150 : TOK___ALIGNOF__                "__alignof__";
  151 : TOK___OFFSETOF__               "__offsetof__";
  152 : TOK___ATTRIBUTE__              "__attribute__";
  153 : TOK_BUILTIN_CHOOSE_EXPR        "__builtin_shoose_expr";
  154 : TOK___BUILTIN_OFFSETOF         "__builtin_offsetof";
  155 : TOK_BUILTIN_CONSTANT_P         "__builtin_constant_p";
  156 : TOK_BUILTIN_TYPES_COMPATABLE_P "__builtin_types_compatable_p";
  157 : TOK___BUILTIN_VA_START         "__builtin_va_start";
  158 : TOK___BUILTIN_VA_COPY          "__builtin_va_copy";
  159 : TOK___BUILTIN_VA_ARG           "__builtin_va_arg";
  160 : TOK___BUILTIN_VA_END           "__builtin_va_end";
  161 : TOK___BUILTIN_ALLOCA           "__builtin_alloca";
  162 : TOK___BUILTIN_EXPECT           "__builtin_expect";
  163 : TOK___EXTENSION__              "__extension__";
  164 : TOK_IMAG                       "__imag__";
  165 : TOK___LABEL__                  "__label__";
  166 : TOK_REAL                       "__real__";
  167 : TOK_THREAD                     "__thread";

  168 : TOK___TYPEOF__                 "__typeof__";

  // dummy terminals used for precedence games
  169 : TOK_PREFER_REDUCE              "<prefer reduce>";
  170 : TOK_PREFER_SHIFT               "<prefer shift>";

  // STATE_EXTENSION
  171 : TOK___ACTIVE__                 "__active__";
  172 : TOK___ONENTRY__                "__onentry__";
  173 : TOK___EVENT__                  "__event__";
  174 : TOK___ONEXIT__                 "__onexit__";
  175 : TOK___INITIAL__                "__initial__";
  176 : TOK___STATE__                  "__state__";
  177 : TOK___TIMEOUT__                "__timeout__";
  178 : TOK___TIMER__                  "__timer__";
