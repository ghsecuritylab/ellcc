#!/bin/sh

# Install in the ELLCC staging directory.
prefix=`cd ..; pwd`
targets=`cat ../targets`
targetlist=`echo $targets | sed -e "s/ /,/g"`
bin=`cd ../bin; pwd`

# Parse options.
install=0
while [ $# -gt 0 ] ; do
  case $1 in
    install)
      install=1 ;;
    *)
      echo "illegal option '$1'"
      exit ;;
  esac
  shift
done

if [ $install -eq 0 ] ; then
  echo removed
# rm -fr obj
# mkdir obj
fi

#
# binutils
#

cd obj

# To build for the x86 with libecc:
#cc=$bin/i386-elf-ecc
#cxx=$bin/i386-elf-e++

# To build with the hosted ecc and host libraries:
cc=$bin/ecc
cxx=$bin/e++

# To build with the host compiler:
#cc=gcc
#cxx=g++

packages="binutils"
for p in $packages; do
if [ $install -eq 0 ] ; then
  echo Making package $p for $targets
  mkdir $p
  cd $p
  ../../src/$p/configure CC=$cc CXX=$cxx --enable-64-bit-bfd --enable-targets=$targetlist \
    --program-prefix=ecc- --prefix=$prefix/lib --bindir=$prefix/bin --datadir=$prefix/lib/share
  if [ $? -ne 0 ] ; then
    echo configure for $p failed
    exit 1
  fi

  sed -e "s:/.*/gnu/src/missing ::g" Makefile > tmp$$
  mv tmp$$ Makefile

  make
  if [ $? -ne 0 ] ; then
    echo make for $p failed
    exit 1
  fi
  cd ..
else
  cd $p
  make install
  if [ $? -ne 0 ] ; then
    echo make install failed
    exit 1
  fi
# RICH: gnu-oids.texi is missing. FIXME
#  make install-html
#  if [ $? -ne 0 ] ; then
#    echo make install-html failed
#    exit 1
#  fi
  cd ..
fi
done

cd ..

#
# gdb
#

# To build for the x86 with libecc:
#cc=$bin/i386-elf-ecc
#cxx=$bin/i386-elf-e++

# To build with the hosted ecc and host libraries:
#cc=$bin/ecc
#cxx=$bin/e++

# To build with the host compiler:
cc=gcc
cxx=g++

cd obj

packages="gdb"
for p in $packages; do
if [ $install -eq 0 ] ; then
  echo Making package $p for $targets
  mkdir $p
  cd $p
  # RICH: --enable-targets=all makes a very big debugger. Should this be trimmed?
  ../../src/$p/configure CC=$cc CXX=$cxx --enable-64-bit-bfd --enable-targets=all \
    --program-prefix=ecc- --prefix=$prefix/lib --bindir=$prefix/bin --datadir=$prefix/lib/share
  if [ $? -ne 0 ] ; then
    echo configure for $p failed
    exit 1
  fi

  sed -e "s:/.*/gnu/src/missing ::g" Makefile > tmp$$
  mv tmp$$ Makefile

  make
  if [ $? -ne 0 ] ; then
    echo make for $p failed
    exit 1
  fi
  cd ..
else
  cd $p
  make install
  if [ $? -ne 0 ] ; then
    echo make install failed
    exit 1
  fi
# RICH: gnu-oids.texi is missing. FIXME
#  make install-html
#  if [ $? -ne 0 ] ; then
#    echo make install-html failed
#    exit 1
#  fi
  cd ..
fi
done

cd ..

#
# as for all targets
#

# To build for the x86 with libecc:
#cc=$bin/i386-elf-ecc
#cxx=$bin/i386-elf-e++

# To build with the hosted ecc and host libraries:
cc=$bin/ecc
cxx=$bin/e++

# To build with the host compiler:
#cc=gcc
#cxx=g++

cd obj
cd binutils
for t in $targets; do
  if [ $install -eq 0 ] ; then
    mkdir $t
    cd $t
    echo Making the assembler for $t
    ../../../src/binutils/gas/configure CC=$cc CXX=$cxx --target=$t --program-prefix=${t}- \
        --prefix=$prefix/lib --bindir=$prefix/bin --datadir=$prefix/lib/share
    if [ $? -ne 0 ] ; then
      echo configure for $t failed
      exit 1
    fi
    make
    if [ $? -ne 0 ] ; then
      echo make for $t failed
      exit 1
    fi
    cd ..
  else
    cd $t
    make install
    if [ $? -ne 0 ] ; then
      echo make install for $t failed
      exit 1
    fi
    cd ..
  fi
done
cd ../..

#
# qemu
#

cd obj

# To build for the x86 with libecc:
#cc=$bin/i386-elf-ecc
#cxx=$bin/i386-elf-e++

# To build with the hosted ecc and host libraries:
#cc=$bin/ecc
#cxx=$bin/e++

# To build with the host compiler:
cc=gcc
cxx=g++

qemu_target_list="i386-softmmu x86_64-softmmu arm-softmmu microblaze-softmmu mips-softmmu mipsel-softmmu \
    ppc-softmmu ppc64-softmmu sparc-softmmu"

qemu_target_list="$qemu_target_list i386-linux-user x86_64-linux-user arm-linux-user armeb-linux-user \
    microblaze-linux-user mips-linux-user mipsel-linux-user \
    ppc-linux-user ppc64-linux-user ppc64abi32-linux-user sparc-linux-user"

p=qemu
if [ $install -eq 0 ] ; then
  echo Making package $p for $targets
  mkdir $p
  cd $p
  ../../src/$p/configure --cc=$cc --host-cc=$cc --prefix=$prefix \
    --target-list="$qemu_target_list"
  if [ $? -ne 0 ] ; then
    echo configure for $p failed
    exit 1
  fi

  sed -e "s:/.*/gnu/src/missing ::g" Makefile > tmp$$
  mv tmp$$ Makefile

  make
  if [ $? -ne 0 ] ; then
    echo make for $p failed
    exit 1
  fi
  cd ..
else
  cd $p
  make install
  if [ $? -ne 0 ] ; then
    echo make install for $p failed
    exit 1
  fi
  cd ..
fi

