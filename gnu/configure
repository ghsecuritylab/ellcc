#!/bin/sh
# ELLCC GNU tools configure

# Get the staging directory.
prefix=`cd ..; pwd`
# Get the bin directory.
bin=`cd ../bin; pwd`

# Get the supported targets.
targets=`cat ../targets`
targetlist=`echo $targets | sed -e "s/ /,/g"`

host=`uname -p`
# To build for the host with libecc:
cc="$bin/ecc -target $host-ellcc-linux"
cxx="$bin/ecc++ -target $host-ellcc-linux"
# GDB and QEMU need host libraries.
hcc=$bin/ecc
hcxx=$bin/ecc++

# To build with the hosted ecc and host libraries:
#cc=$bin/ecc
#cxx=$bin/ecc++
#hcc=$bin/ecc
#hcxx=$bin/ecc++

# To build with the gcc compiler:
#cc=gcc
#cxx=g++
#hcc=gcc
#hcxx=g++

# Configure for GNU tools.
mkdir -p gnu-build

# Configure for binutils.
# binutils are build to support all targets in the target list.
cd gnu-build
packages="binutils"
for p in $packages; do
  echo Configuring package $p for $targets
  mkdir $p
  cd $p
  ../../src/$p/configure CC="$cc" CXX="$cxx" --enable-64-bit-bfd \
    --enable-targets=$targetlist \
    --program-prefix=ecc- --prefix=$prefix/lib --bindir=$bin \
    --datadir=$prefix/lib/share
  if [ $? -ne 0 ] ; then
    echo configure for $p failed
    exit 1
  fi

  sed -e "s:/.*/gnu/src/missing ::g" Makefile > tmp$$
  mv tmp$$ Makefile
  # We have to make binutils here so the configuration of the assemblers
  # later in this file works. Ugh!
  make
  cd ..
done
cd ..

# Configure for GDB.
# GDB is built to support all GDB targets.
cd gnu-build
packages="gdb"
for p in $packages; do
  echo Configuring package $p for $targets
  mkdir $p
  cd $p
  ../../src/$p/configure CC="$hcc" CXX="$hcxx" --enable-64-bit-bfd \
    --enable-targets=$targetlist \
    --program-prefix=ecc- --prefix=$prefix/lib --bindir=$bin \
    --datadir=$prefix/lib/share
  if [ $? -ne 0 ] ; then
    echo configure for $p failed
    exit 1
  fi

  sed -e "s:/.*/gnu/src/missing ::g" Makefile > tmp$$
  mv tmp$$ Makefile
  cd ..
done
cd ..

# Configure for assemblers for all targets..
cd gnu-build
cd binutils
for t in $targets; do
  mkdir $t
  cd $t
  echo Configuring the assembler for $t
  ../../../src/binutils/gas/configure CC="$cc" CXX="$cxx" --target=$t --program-prefix=${t}- \
      --prefix=$prefix/lib --bindir=$bin --datadir=$prefix/lib/share
  if [ $? -ne 0 ] ; then
    echo configure for $t failed
    exit 1
  fi
  cd ..
done
cd ../..

# Configure for QEMU.
cd src/qemu
# The QEMU system targets.
qemu_target_list="i386-softmmu x86_64-softmmu arm-softmmu microblaze-softmmu mips-softmmu mipsel-softmmu \
    ppc-softmmu ppc64-softmmu sparc-softmmu"

if [ `uname` = "Linux" ] ; then 
    # The QEMU Linux user space targets.
    qemu_target_list="$qemu_target_list i386-linux-user x86_64-linux-user arm-linux-user armeb-linux-user \
    microblaze-linux-user mips-linux-user mipsel-linux-user \
    ppc-linux-user ppc64-linux-user ppc64abi32-linux-user sparc-linux-user"
fi

echo Configuring package qemu for $targets
./configure --cc="$hcc" --host-cc="$hcc" --prefix=$prefix --disable-strip \
  --target-list="$qemu_target_list" --disable-guest-agent
if [ $? -ne 0 ] ; then
  echo configure for qemu failed
  exit 1
fi
cd ../..
